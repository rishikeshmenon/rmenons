name: Update Smart Home Product Data

on:
  schedule:
    # Run every day at 2 AM UTC (adjust for your timezone)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: 'false'
        type: boolean

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run data update
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}
        run: |
          # Run the data population script
          npx tsx scripts/populate-real-data.ts
          
          # Trigger API update endpoint
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "x-api-key: $ADMIN_API_KEY" \
            "${{ secrets.APP_URL }}/api/admin/update-data"

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "ü§ñ Automated data update - $(date)"
          git push

      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Data update completed successfully"
          echo "üìä Products and categories updated"

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Data update failed"
          echo "Please check the logs for details"

  update-prices:
    runs-on: ubuntu-latest
    needs: update-data
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update product prices
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: |
          # This would run a price update script
          echo "üí∞ Price update would run here"
          # npx tsx scripts/update-prices.ts

  health-check:
    runs-on: ubuntu-latest
    needs: [update-data, update-prices]
    
    steps:
      - name: Health check
        run: |
          echo "üè• Running health check..."
          # Check if the API is responding
          curl -f "${{ secrets.APP_URL }}/api/health" || exit 1
          echo "‚úÖ Health check passed"
